Metadata-Version: 2.4
Name: tinytroupe
Version: 0.1.0
Summary: A supply chain simulation framework using TinyTroupe's agent-based capabilities
Author-email: Your Name <your.email@example.com>
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: matplotlib
Requires-Dist: rich
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"

# Supply Chain Resilience Optimization Simulation

This project implements a Monte Carlo simulation to evaluate supply chain resilience improvements in a global manufacturing context. The simulation models various supply chain strategies and their impact on resilience, cost, and performance metrics.

## Overview

The simulation models a global supply chain with the following components:

- Geographic regions (North America, Europe, East Asia, Southeast Asia, South Asia)
- Supply chain agents (COO, Regional Managers, Suppliers, Logistics Providers, Production Facilities)
- External events (Weather, Geopolitical, Market)
- Resilience strategies (Supplier Diversification, Dynamic Inventory, Flexible Transportation, Regional Flexibility)

## Installation

1. Clone the repository:
```bash
git clone <repository-url>
cd supply-chain-simulation
```

2. Install dependencies:
```bash
pip install -r requirements.txt
```

## Usage

Run the simulation:
```bash
python supply_chain_simulation.py
```

The simulation will:
1. Run a baseline scenario
2. Run scenarios with individual resilience strategies
3. Run a scenario with all strategies combined
4. Generate visualizations and export results

## Outputs

The simulation generates:
1. `supply_chain_simulation_results.png`: Visual comparison of metrics across scenarios
2. `supply_chain_simulation_results.csv`: Detailed numerical results

## Key Metrics

The simulation tracks the following metrics:
- Resilience Score
- Recovery Time
- Service Level
- Total Cost
- Inventory Cost
- Transportation Cost
- Risk Exposure
- Supplier Risk
- Transportation Risk
- Lead Time
- Flexibility Score
- Quality Score

## Customization

You can customize the simulation by modifying:
1. `DEFAULT_CONFIG` in `supply_chain.py`: Adjust simulation parameters
2. Agent behaviors in `supply_chain.py`: Modify decision-making logic
3. Metrics calculation in `supply_chain_simulation.py`: Change how metrics are computed

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the LICENSE file for details.
